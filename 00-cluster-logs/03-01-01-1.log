1                                                          The SAS System                              20:18 Thursday, June 20, 2019

NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M3) 
      Licensed to UNIVERSITY OF NORTH CAROLINA CHAPEL HILL - SFA T&R, Site 70084073.
NOTE: This session is executing on the Linux 3.10.0-957.el7.x86_64 (LIN X64) platform.



NOTE: Updated analytical products:
      
      SAS/STAT 14.1
      SAS/ETS 14.1
      SAS/OR 14.1
      SAS/IML 14.1
      SAS/QC 14.1

NOTE: Additional host information:

 Linux LIN X64 3.10.0-957.el7.x86_64 #1 SMP Thu Oct 4 20:48:51 UTC 2018 x86_64 Red Hat Enterprise Linux Server release 7.6 (Maipo) 

You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.35 seconds
      cpu time            0.04 seconds
      
1          %macro setup(program,user);
2          
3          option ls=150 ps=90;
4            /** close ODS destinations **/
5            ods html close;
6            ods listing close;
7          
8            /** clear work library **/
9            proc datasets library=work noprint kill; run; quit;
10         
11           /** delete local macro variables **/
12           data vars;
13             set sashelp.vmacro;
14           run;
15           data _null_;
16             set vars;
17             temp=lag(name);
2                                                          The SAS System                              20:18 Thursday, June 20, 2019

18             if scope='GLOBAL' and substr(name,1,3) ne 'SYS' and temp ne name then
19               call execute('%symdel '||trim(left(name))||';');
20           run;
21         
22           /** obtain location of SAS program (requires program to be saved) **/
23           /** also create needed macro variables for various SAS libraries **/
24           %global ROOT FILE_PATH IML_PATH MACRO_PATH OUT_PATH RES_PATH;
25           data te;
26            set sashelp.vextfl;
27            where find(upcase(xPath),upcase("&program"));
28         
29            filePath = substr(xPath,1,index(xPath,"&program")-1);
30            outPath  = tranwrd(filePath,'PROGRAMS','OUTPUT');
31            root     = substr(xPath,1,index(xPath,"github") + length("github"));
32         
33            call symput('ROOT'     ,strip(root));
34            call symput('FILE_PATH',strip(filePath));
35            call symput('SLASH'    ,strip(substr(strip(reverse(root)),1,1)));
36           run;
37         
38         
39         
40            x "cd &ROOT.";
41            %if &SYSSCP = WIN %then %do;
42               filename folders pipe 'dir /A:D/B/S';
43            %end;
44            %else %do;
45               filename folders pipe 'ls -d * ';
46            %end;
47         
48            data directories;
49              length path $500;
50              infile folders dlmstr="$#&#&#";
51              input path;
52         	
53         	   %if &SYSSCP = WIN %then %do;
54                 if find(path,'00-sas-macros','i')      then call symput('MACRO_PATH',strip(strip(path)||"&slash."));
55                 if find(path,'output','i')         then call symput('OUT_PATH',strip(strip(path)||"&slash."));
56                 if find(path,'sas-data','i')        then call symput('RES_PATH',strip(strip(path)||"&slash."));
57         	   %end;
58         	   %else %do;
59                 if find(path,'00-sas-macros','i')      then call symput('MACRO_PATH',strip("&root."||strip(path)||"&slash."));
60                 if find(path,'output','i')         then call symput('OUT_PATH',strip("&root."||strip(path)||"&slash."));
61                 if find(path,'sas-data','i')       then call symput('RES_PATH',strip("&root."||strip(path)||"&slash."));
62         	   %end;
63            run;
64         
65            libname results "&RES_PATH.";
66            libname output  "&OUT_PATH.";
67         
68         
69            %put &=ROOT;
70            %put &=FILE_PATH;
71            %put &=MACRO_PATH;
72            %put &=OUT_PATH;
73            %put &=RES_PATH;
74         
75         %mend;
3                                                          The SAS System                              20:18 Thursday, June 20, 2019

76         
77         %setup(01-SS-Calculation.sas,Psioda);
NOTE: Deleting WORK.SASMACR (memtype=CATALOG).
NOTE: File WORK.SASMACR (memtype=CATALOG) cannot be deleted because it is in use.
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: There were 70 observations read from the data set SASHELP.VMACRO.
NOTE: The data set WORK.VARS has 70 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.02 seconds
      


NOTE: There were 70 observations read from the data set WORK.VARS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE FIND(UPCASE(xPath), '01-SS-CALCULATION.SAS');
NOTE: The data set WORK.TE has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: The infile FOLDERS is:
      Pipe command="ls -d * "

NOTE: 11 records were read from the infile FOLDERS.
      The minimum record length was 14.
      The maximum record length was 18.
NOTE: The data set WORK.DIRECTORIES has 11 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: Libref RESULTS was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /proj/psiodalab/projects/bayesDesignSimilars/github/03-03-sas-data
NOTE: Libref OUTPUT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /proj/psiodalab/projects/bayesDesignSimilars/github/03-02-sas-output
ROOT=/proj/psiodalab/projects/bayesDesignSimilars/github/
FILE_PATH=/proj/psiodalab/projects/bayesDesignSimilars/github/03-01-sas-programs/
MACRO_PATH=/proj/psiodalab/projects/bayesDesignSimilars/github/03-00-sas-macros/
OUT_PATH=/proj/psiodalab/projects/bayesDesignSimilars/github/03-02-sas-output/
RES_PATH=/proj/psiodalab/projects/bayesDesignSimilars/github/03-03-sas-data/
78         
79         
80         *** Code to compute sample size required for binary distributed endpoint;
81         %let rr      = 0.81;
82         %let eqm_bin = 0.10;
83         %let alpha   = 0.05;
84         %let power   = 0.90;
85         proc power;
86           twosamplefreq test=fm
87             groupproportions   = (&rr. &rr.)
88             nullproportiondiff = &eqm_bin.
89             alpha              = &alpha.
90             power              = &power.
91             nPerGroup          = .;
92             ods output output = results.SS_Binomial(keep=NullProportionDiff Alpha Proportion1 Power NPerGroup);
93         run;

NOTE: The data set RESULTS.SS_BINOMIAL has 1 observations and 5 variables.
NOTE: PROCEDURE POWER used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

94         
95         
96         *** Code to compute sample size required for normally distributed endpoint;
97         %let power    = 0.90;
98         %let alpha    = 0.05;
99         %let eqm_norm = 0.60;
100        %let std_norm = 1.40;
101        proc power;
102           twosamplemeans test=equiv_diff
4                                                                   The SAS System                                       20:18 Thursday, June 20, 2019

103              alpha     =  &alpha.
104              meandiff  =  0.0
105        	  lower     = -&eqm_norm.
106        	  upper     =  &eqm_norm.
107              stddev    =  &std_norm.
108              nPerGroup = .
109              power     = &power.;
110              ods output Output = results.SS_Normal(keep = LowerBound UpperBound Alpha meanDiff StdDev Power NPerGroup);
111        run;

NOTE: The data set RESULTS.SS_NORMAL has 1 observations and 7 variables.
NOTE: PROCEDURE POWER used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

112        

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           0.71 seconds
      cpu time            0.11 seconds
      
